__d(function (global, require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/lucianojr/Documentos/UFPB/Projetos/rocketseat-react-github/componentes/NewRepoModal.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = require(_dependencyMap[2], "react-native");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        NewRepoModal: {
            displayName: "NewRepoModal"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/lucianojr/Documentos/UFPB/Projetos/rocketseat-react-github/componentes/NewRepoModal.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var NewRepoModal = _wrapComponent("NewRepoModal")(function (_Component) {
        _inherits(NewRepoModal, _Component);

        function NewRepoModal() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, NewRepoModal);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NewRepoModal.__proto__ || Object.getPrototypeOf(NewRepoModal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
                newRepoText: ''
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(NewRepoModal, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react3.default.createElement(
                    _reactNative.Modal,
                    {
                        animationType: "fade",
                        transparent: true,
                        visible: this.props.visible,
                        onRequestClose: function onRequestClose() {},
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 19
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.modalContainer,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 23
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.View,
                            {
                                style: styles.boxContainer,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 24
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    style: styles.boxTittle,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 25
                                    }
                                },
                                "Adicionar Repositorio"
                            ),
                            _react3.default.createElement(_reactNative.TextInput, {
                                autoFocus: true,
                                autoCaptalize: "none",
                                style: styles.boxInput,
                                underlineColorAndroid: "rgba(0,0,0,0)",
                                placeholder: "organiza\xE7\xE3o/repositorio",
                                value: this.state.newRepoText,
                                onChangeText: function onChangeText(newRepoText) {
                                    return _this2.setState({
                                        newRepoText: newRepoText
                                    });
                                },
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 26
                                }
                            }),
                            _react3.default.createElement(
                                _reactNative.View,
                                {
                                    style: styles.buttonContainer,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 35
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.button, styles.cancelButton],
                                        onPress: this.props.onCancel,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 36
                                        }
                                    },
                                    _react3.default.createElement(
                                        _reactNative.Text,
                                        {
                                            style: styles.buttonText,
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 39
                                            }
                                        },
                                        "Cancelar"
                                    )
                                ),
                                _react3.default.createElement(
                                    _reactNative.TouchableOpacity,
                                    {
                                        style: [styles.button, styles.submitButton],
                                        onPress: function onPress() {
                                            return _this2.props.onAdd(_this2.state.newRepoText);
                                        },
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 42
                                        }
                                    },
                                    _react3.default.createElement(
                                        _reactNative.Text,
                                        {
                                            style: styles.buttonText,
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 45
                                            }
                                        },
                                        "Adicionar"
                                    )
                                )
                            )
                        )
                    )
                );
            }
        }]);

        return NewRepoModal;
    }(_react2.Component));

    exports.default = NewRepoModal;

    var styles = _reactNative.StyleSheet.create({
        modalContainer: {
            flex: 1,
            backgroundColor: 'rgba(0,0,0,0.7)',
            justifyContent: 'center',
            alignItems: 'center'
        },
        boxContainer: {
            padding: 20,
            backgroundColor: '#FFF',
            borderRadius: 10,
            alignItems: 'center',
            width: 280
        },
        boxTittle: {
            fontWeight: 'bold',
            fontSize: 16
        },
        boxInput: {
            alignSelf: 'stretch',
            marginTop: 10,
            paddingVertical: 0,
            paddingHorizontal: 20,
            borderWidth: 1,
            borderColor: '#DDD',
            height: 40,
            borderRadius: 3
        },
        buttonContainer: {
            marginTop: 10,
            height: 40,
            flexDirection: 'row'
        },
        button: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            borderRadius: 3
        },
        cancelButton: {
            backgroundColor: '#E25F5F',
            marginLeft: 5
        },
        submitButton: {
            backgroundColor: '#70BD85',
            marginLeft: 5
        },
        buttonText: {
            fontWeight: 'bold',
            color: '#FFF',
            fontSize: 12
        }
    });
});